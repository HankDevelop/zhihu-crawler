<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.crawl.tohoku.dao.DictQueryInfoDao">
  <resultMap id="BaseResultMap" type="com.crawl.tohoku.entity.DictQueryInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="request_uri" jdbcType="VARCHAR" property="requestUri" />
    <result column="request_info" jdbcType="VARCHAR" property="requestInfo" />
    <result column="resp_code" jdbcType="INTEGER" property="respCode" />
    <result column="calls" jdbcType="INTEGER" property="calls" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_id" jdbcType="VARCHAR" property="createId" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="modify_id" jdbcType="VARCHAR" property="modifyId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.crawl.tohoku.entity.DictQueryInfo">
    <result column="resp_txt" jdbcType="LONGVARCHAR" property="respTxt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, request_uri, request_info, resp_code, calls, create_time, create_id, modify_time, 
    modify_id
  </sql>
  <sql id="Blob_Column_List">
    resp_txt
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.crawl.tohoku.entity.DictQueryInfoExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from dict_query_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="com.crawl.tohoku.entity.DictQueryInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dict_query_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectUniqueByExample" parameterType="com.crawl.tohoku.entity.DictQueryInfoExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from dict_query_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    limit 1
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from dict_query_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from dict_query_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.crawl.tohoku.entity.DictQueryInfoExample">
    delete from dict_query_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.crawl.tohoku.entity.DictQueryInfo" useGeneratedKeys="true">
    insert into dict_query_info (request_uri, request_info, resp_code, 
      calls, create_time, create_id, 
      modify_time, modify_id, resp_txt
      )
    values (#{requestUri,jdbcType=VARCHAR}, #{requestInfo,jdbcType=VARCHAR}, #{respCode,jdbcType=INTEGER}, 
      #{calls,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{createId,jdbcType=VARCHAR}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{modifyId,jdbcType=VARCHAR}, #{respTxt,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.crawl.tohoku.entity.DictQueryInfo" useGeneratedKeys="true">
    insert into dict_query_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="requestUri != null">
        request_uri,
      </if>
      <if test="requestInfo != null">
        request_info,
      </if>
      <if test="respCode != null">
        resp_code,
      </if>
      <if test="calls != null">
        calls,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="modifyId != null">
        modify_id,
      </if>
      <if test="respTxt != null">
        resp_txt,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="requestUri != null">
        #{requestUri,jdbcType=VARCHAR},
      </if>
      <if test="requestInfo != null">
        #{requestInfo,jdbcType=VARCHAR},
      </if>
      <if test="respCode != null">
        #{respCode,jdbcType=INTEGER},
      </if>
      <if test="calls != null">
        #{calls,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyId != null">
        #{modifyId,jdbcType=VARCHAR},
      </if>
      <if test="respTxt != null">
        #{respTxt,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.crawl.tohoku.entity.DictQueryInfoExample" resultType="java.lang.Long">
    select count(*) from dict_query_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update dict_query_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.requestUri != null">
        request_uri = #{record.requestUri,jdbcType=VARCHAR},
      </if>
      <if test="record.requestInfo != null">
        request_info = #{record.requestInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.respCode != null">
        resp_code = #{record.respCode,jdbcType=INTEGER},
      </if>
      <if test="record.calls != null">
        calls = #{record.calls,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createId != null">
        create_id = #{record.createId,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyId != null">
        modify_id = #{record.modifyId,jdbcType=VARCHAR},
      </if>
      <if test="record.respTxt != null">
        resp_txt = #{record.respTxt,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update dict_query_info
    set id = #{record.id,jdbcType=BIGINT},
      request_uri = #{record.requestUri,jdbcType=VARCHAR},
      request_info = #{record.requestInfo,jdbcType=VARCHAR},
      resp_code = #{record.respCode,jdbcType=INTEGER},
      calls = #{record.calls,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_id = #{record.createId,jdbcType=VARCHAR},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      modify_id = #{record.modifyId,jdbcType=VARCHAR},
      resp_txt = #{record.respTxt,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update dict_query_info
    set id = #{record.id,jdbcType=BIGINT},
      request_uri = #{record.requestUri,jdbcType=VARCHAR},
      request_info = #{record.requestInfo,jdbcType=VARCHAR},
      resp_code = #{record.respCode,jdbcType=INTEGER},
      calls = #{record.calls,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_id = #{record.createId,jdbcType=VARCHAR},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      modify_id = #{record.modifyId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.crawl.tohoku.entity.DictQueryInfo">
    update dict_query_info
    <set>
      <if test="requestUri != null">
        request_uri = #{requestUri,jdbcType=VARCHAR},
      </if>
      <if test="requestInfo != null">
        request_info = #{requestInfo,jdbcType=VARCHAR},
      </if>
      <if test="respCode != null">
        resp_code = #{respCode,jdbcType=INTEGER},
      </if>
      <if test="calls != null">
        calls = #{calls,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyId != null">
        modify_id = #{modifyId,jdbcType=VARCHAR},
      </if>
      <if test="respTxt != null">
        resp_txt = #{respTxt,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.crawl.tohoku.entity.DictQueryInfo">
    update dict_query_info
    set request_uri = #{requestUri,jdbcType=VARCHAR},
      request_info = #{requestInfo,jdbcType=VARCHAR},
      resp_code = #{respCode,jdbcType=INTEGER},
      calls = #{calls,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_id = #{createId,jdbcType=VARCHAR},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      modify_id = #{modifyId,jdbcType=VARCHAR},
      resp_txt = #{respTxt,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.crawl.tohoku.entity.DictQueryInfo">
    update dict_query_info
    set request_uri = #{requestUri,jdbcType=VARCHAR},
      request_info = #{requestInfo,jdbcType=VARCHAR},
      resp_code = #{respCode,jdbcType=INTEGER},
      calls = #{calls,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_id = #{createId,jdbcType=VARCHAR},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      modify_id = #{modifyId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>